using System;
using System.Collections.Generic;
using System.Reflection;

namespace ExtensionMethods
{
    public static class ObjectExtensions
    {
        public static Dictionary<string, object> ToDictionary(this object obj)
        {
            Dictionary<string, object> dictionary = new Dictionary<string, object>();

            if (obj == null)
            {
                return dictionary;
            }

            foreach (PropertyInfo property in obj.GetType().GetProperties(BindingFlags.Public | BindingFlags.Instance))
            {
                if (property.CanRead)
                {
                    dictionary[property.Name] = property.GetValue(obj, null);
                }
            }

            return dictionary;
        }
    }
}

public class SampleClass
{
    public int Id { get; set; }
    public string Name { get; set; }
    public DateTime Date { get; set; }
}

public class Program
{
    public static void Main()
    {
        SampleClass sample = new SampleClass
        {
            Id = 1,
            Name = "Sample",
            Date = DateTime.Now
        };

        // Ensure you have the correct namespace for the extension method
        using ExtensionMethods;

        Dictionary<string, object> dictionary = sample.ToDictionary();

        foreach (var kvp in dictionary)
        {
            Console.WriteLine($"{kvp.Key}: {kvp.Value}");
        }
    }
}
